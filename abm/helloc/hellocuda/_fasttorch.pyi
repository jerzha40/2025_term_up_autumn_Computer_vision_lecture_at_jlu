from typing import List, Literal
from numpy.typing import NDArray
import numpy as np

class Device:
    CPU: "Device"
    CUDA: "Device"

class Tensor:
    shape: List[int]
    device: Literal["cpu", "cuda"]
    def __init__(self, shape: List[int], device: Device = ...) -> None: ...
    def __init__(self, shape: List[int], device: str = ...) -> None: ...
    def numel(self) -> int: ...

def add(a: Tensor, b: Tensor) -> Tensor: ...
def from_numpy(a: NDArray[np.float32], device: str = ...) -> Tensor: ...
def to_numpy(t: Tensor) -> NDArray[np.float32]: ...
